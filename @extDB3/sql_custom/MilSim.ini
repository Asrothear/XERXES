[Default]
Version = 12
Strip Chars = ""
;; List of characters to strip out  
Strip Chars Mode = 1
;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars  
;;     Note: Logging on works when sending data to database.
Input SQF Parser = false  
;; Expermential  
;;   If enabled will use SQF Array Parser instead of : seperator for values  
;;   i.e   0:SQL:UpdatePlayer:["Joe",[1,2,0],0.22333,"PlayerBackpack",-3]  
;;   Advantage is that you dont need to strip : seperator from user inputted values 
; --------------------------------------------------------------------------------
; SQL Statements
; get = all data
; select = specific data depending on passed arguments
; update = update row
; delete = delete row
; insert = insert row
; check = boolean query
; --------------------------------------------------------------------------------

;;--------------- get client information such as class level or money ------------



;;insert player id and name
[db_insert_player]
SQL1_1 = Insert Into `players`
SQL1_2 = VALUES (
SQL1_3 = '',?,?,?,?,?,?,?,?,?,?,?,?);
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9,10,11,12

[db_update_player]
SQL1_1 = UPDATE `players` SET
SQL1_2 = `name` = ?, `alias` = ?
SQL1_3 = WHERE `playerid` = ?;
SQL1_INPUTS = 1,2,3

[db_get_player]
SQL1_1 = SELECT
SQL1_2 = `uid`,`name`,`cash`,`bankacc`,`mediclevel`,`piolevel`,`unicornlevel`,`blacklist`
SQL1_3 = FROM `players` WHERE playerid = ?;
SQL1_INPUTS = 1
OUTPUT = 1-String,2-String,3-String,4-String,5-String,6-String,7-String,8-String

[db_find_player]
SQL1_1 = SELECT
SQL1_2 = `name`
SQL1_3 = FROM `players` WHERE playerid = ?;
SQL1_INPUTS = 1
OUTPUT = 1-String

[db_get_player_money]
SQL1_1 = SELECT
SQL1_2 = `cash`,`bankacc`
SQL1_3 = FROM `players` WHERE playerid = ?;
SQL1_INPUTS = 1
OUTPUT = 1-String,2-String

[db_set_player_money]
SQL1_1 = UPDATE `players` SET
SQL1_2 = `cash` = ?,`bankacc` = ?
SQL1_3 = WHERE `playerid` = ?;
SQL1_INPUTS = 1,2,3
OUTPUT = 1-String,2-String




Return InsertID = true